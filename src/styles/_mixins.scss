@use "./breakpoints" as *;
@use "./variables" as *;

// Media queries

@mixin for-mobile-only {
  @media screen and (max-width: $breakpoint-mobile) {
    @content;
  }
}

@mixin for-tablet-down {
  @media screen and (max-width: $breakpoint-tablet) {
    @content;
  }
}

@mixin for-tablet-up {
  @media screen and (min-width: ($breakpoint-mobile + 1)) {
    @content;
  }
}

@mixin for-desktop-up {
  @media screen and (min-width: ($breakpoint-tablet + 1)) {
    @content;
  }
}

@mixin hover-supported {
  @media not all and (hover: none) {
    @content;
  }
}

// Transition

@mixin transition-main($properies: all) {
  transition-duration: $transition-duration--main;
  transition-timing-function: $transition-tfunc--main;

  @each $prop in $properies {
    transition-property: $prop;
  }
}

// Layout

@mixin column($gap: $gap--s) {
  display: flex;
  flex-direction: column;
  gap: $gap;
}

// Other

@mixin scrollbar($width: 10px) {
  scrollbar-width: thin;
  scrollbar-color: rgba(0 0 0 / 10%) transparent;

  &::-webkit-scrollbar {
    background-color: transparent;
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-thumb {
    background-color: rgba(0 0 0 / 10%);
    border-radius: 10px;

    // padding around thumb
    border: solid 2px transparent;
    background-clip: padding-box;
  }
}

@mixin scrollbar-on-hover($isY: true, $isX: false, $size: 10px) {
  // overflow
  @if ($isY) {
    overflow-y: auto;
  }

  @if ($isX) {
    overflow-x: auto;
  }

  @include scrollbar($width: $size);

  @media (hover: hover) {
    &:not(:hover)::-webkit-scrollbar-thumb {
      background-color: rgba(0 0 0 / 0%);
    }
  }
}
